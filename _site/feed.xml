<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="https://sambattalio.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://sambattalio.github.io/" rel="alternate" type="text/html" /><updated>2021-02-19T18:46:49-05:00</updated><id>https://sambattalio.github.io/feed.xml</id><title type="html">Gigachad</title><subtitle>Hackers in the Bazaar Blogs.
</subtitle><author><name>Sam Battalio</name></author><entry><title type="html">Reading 02: Hardware ResidentSleeper</title><link href="https://sambattalio.github.io/reading-02/" rel="alternate" type="text/html" title="Reading 02: Hardware ResidentSleeper" /><published>2021-02-12T11:32:20-05:00</published><updated>2021-02-12T11:32:20-05:00</updated><id>https://sambattalio.github.io/reading-02</id><content type="html" xml:base="https://sambattalio.github.io/reading-02/">&lt;p&gt;I think it is important to spread bits and pieces of the Hacker Ethic to a wider audience, but the full and “complete” version of it doesn’t necessarily apply to everyone. I will touch on this more, but clearly throwing away the decentralization and free information part does not apply to everyone who seeks to actually make profit off of their works.&lt;/p&gt;

&lt;p&gt;In my eyes, the “true hacker” follows this ethic fully without compromise forming the Stallmans or Davises of the world. However, it seemed like the “Hardware Hackers” were far more entrepreneurial and cognizant of the monetary value of the fruits of their labor. A great example of this is the Homebrew Computer Club, which seemed very similar to the “true hacker” clubs in the first part of this book. The big difference I noticed while reading was that they made companies and sold boards they made while hacking. This is something unfathomable for a “true hacker” in my eyes, though I think it’s a step in the right direction within reason. I feel these two groups are similar in that “Hardware Hackers” follow a great deal of the hacker ethic as well. The previously mentioned Homebrew Computer Club open sourced their schematics and code and had some of these centralized places to share and build on ideas as a group.&lt;/p&gt;

&lt;p&gt;This entrepreneurial spirit is both good and bad, where it completely shifted the hacker culture towards billion-dollar companies, but largely broke the idea of hacking together for the spirit of it. A great thing about this shift though was these hackers were able to create and sell affordable technology to the masses, like the Apple I or even the Tiny BASIC interpreter. This sparked a huge boom of “regular” people in tech and lead to the world we know today. I think largely this change is for the better, from the “true hacker” to these new “hardware hackers”. Sure, they could be seen as more selfish and not following all of the tenants of the hacker ethics. However, the impact is drastically different of these hackers in their ability to give the people tech as opposed to just staying in and making software that does have innovations but is so narrow in scope. Largely, I think this helped decrease elitism and start the snowball effect rolling of making tech widely available (though I will concede tech was still very male dominated in this era).&lt;/p&gt;

&lt;p&gt;I consider myself an optimist and think that though there are serious negative effects of technology, it is largely a force for good. Think of the great strides it has helped us take in society in terms of availability of resources. Wikipedia, stackoverflow, etc. all come from this idea of widespread tech. I think it is a great necessity to throw away some of the hacker ethic if it means that everyone (to a certain extent) has an equal access to information. The ability for people to be empowered by technology to make a living is so powerful.&lt;/p&gt;

&lt;p&gt;I empathize with “true hackers”, but some things just need to be close sourced and monetized. With the creation of mass technology comes a mass need for people working in technology. As I mentioned last reading, the hacker ethic and the idea of a “true hacker” is just not scalable to the general population. Unfortunately, a lot of people like to be paid for the work they do. I think that although this is kind of sad, it makes the world overall way more productive and normalizes technology even more. However, there are happy mediums I think that we can utilize these hacker ethics as best as possible. A lot of companies open source some of their resources to share to the world and collaborate, and that has proven wildly successful especially today. This works in a sense for the parts of companies that aren’t the “secret sauce”, or what makes them viable as a standalone business. I have also seen service providers do this, where they freely provide their information, but charge to host instances of it and manage it. I personally see these actions as probably as close to the 2nd code in the hacker ethics.&lt;/p&gt;

&lt;p&gt;Overall, I think everyone should be able to access computers, which is coincidentally the first rule of the hacker ethics. I think it is very important to spread the ideals of it, but with a grain of salt. They can’t reasonably be followed in today’s technological ecosystem of mass use. I absolutely believe that we should at least modify some parts of the hacker ethic in order for mass innovation and impact. I honestly feel so strongly about this because I truly believe in wide access to technology, and I think compromising on some things lead to a better overall society. So I would say it is fairly important to spread this, but perhaps a modernized version?&lt;/p&gt;

&lt;p&gt;– Sam&lt;/p&gt;</content><author><name>Sam Battalio</name></author><summary type="html">I think it is important to spread bits and pieces of the Hacker Ethic to a wider audience, but the full and “complete” version of it doesn’t necessarily apply to everyone. I will touch on this more, but clearly throwing away the decentralization and free information part does not apply to everyone who seeks to actually make profit off of their works.</summary></entry><entry><title type="html">Reading 03: i don’t have a cool domain anymore</title><link href="https://sambattalio.github.io/reading-03/" rel="alternate" type="text/html" title="Reading 03: i don’t have a cool domain anymore" /><published>2021-02-12T11:32:20-05:00</published><updated>2021-02-12T11:32:20-05:00</updated><id>https://sambattalio.github.io/reading-03</id><content type="html" xml:base="https://sambattalio.github.io/reading-03/">&lt;p&gt;Blog 3:&lt;/p&gt;

&lt;p&gt;I think the Game Hackers from this section really seems like next logical step in development of the “hacker”¬¬¬ archetype. In the first part of the “true hackers”, we had people grinding for the love of the art. In the second section we still had that, however companies and monetary gain started to follow these hardware designers. This section holds true this trend where these folks who are elite hackers start licensing and selling to fit a mass audience of software and computer users. I think the age of the “free” software hacker has declined greatly as people realize the impact and great wealth they can accumulate with commercial software. I don’t think this is necessarily a bad thing, where I don’t think the game development industry would be nearly where it grew from the section if it weren’t for licensing and software sales. A whole industry can’t just be completely propped up by free work. These game hackers are slightly unique however where they are intensely invested in monetization, almost to a point of taking the fun and joy of computing that the other generations of hackers had. Things like copy protection first, though practical, shows what is really going through their minds as they develop. I think this is a necessary evil, however, as certain software it makes sense to pay for and own (as well as keep closed source). Sure, there are open source clones of some programs, but I would absolutely pay for the security and “guarantee” that it works. I think this idea of sales really empowers a lot of software to rise that never would have otherwise. I don’t think you could have a AAA video game in the world of noncommercial software with stinky DRM. The commitment of a DRM or copy protection provides companies and hackers the peace of mind to know they can invest their time into something without it being stolen. This especially scales up whten you think of how many people work on a game like Red Dead Redemption.&lt;/p&gt;

&lt;p&gt;I think this hacker ethic can in fact survive in the world of commercial software. I won’t go too into this question as I feel I covered this same line of reasoning in my last blog. However, I think just merely modifying some of the ethic will yield a great compromise and still bode well for the art of computing. I do think that the real world outside of a computer lab has changed hackerism, but for the better. This idea of a hacker is not sustainable outside of a MIT computer lab.&lt;/p&gt;

&lt;p&gt;I think that there is no “better” way to be a programmer in this current generation of hacker. Some students and engineers get into this field as a way to succeed in life, empowered by computers, and others come into it not for grades or a job but for the love of it. Surprisingly, I think that these two groups of people I have seen around have meshed well and I think it could spark even more innovation in the field. Having people with other perspectives than just “computers are life” is amazing in this age of commercial software. Though Levy might not see them as a “true hacker”, they certainly are in my book. I don’t understand the judgement of what a “better” programmer is. Sure, more output and cleaner or more efficient code is best for a company. But if two people are 10x’ers why does it matter if one of them is just programming for goals and not for the love of computers in their soul. I honestly find the mentality of loving it from your heart being the best to be a form of elitism especially now. Computing is so ubiquitous, and people of all ages are learning now.&lt;/p&gt;

&lt;p&gt;Going off of that, I don’t even think people need to learn programming to have a “hacker” spirit around computers. I think there are plenty of novel ways to use computers these days that doesn’t follow the traditional program. Hacker Culture should be inclusive, and I think it is trending more that way.&lt;/p&gt;

&lt;p&gt;~ Sam&lt;/p&gt;</content><author><name>Sam Battalio</name></author><summary type="html">Blog 3:</summary></entry><entry><title type="html">Pajama Monkey</title><link href="https://sambattalio.github.io/monkey-picture/" rel="alternate" type="text/html" title="Pajama Monkey" /><published>2021-02-12T05:32:20-05:00</published><updated>2021-02-12T05:32:20-05:00</updated><id>https://sambattalio.github.io/monkey-picture</id><content type="html" xml:base="https://sambattalio.github.io/monkey-picture/">&lt;p&gt;This is a cool monkey picture I found this week online!&lt;/p&gt;</content><author><name>Sam Battalio</name></author><summary type="html">This is a cool monkey picture I found this week online!</summary></entry><entry><title type="html">Reading 01: Hacking Culture</title><link href="https://sambattalio.github.io/reading-01/" rel="alternate" type="text/html" title="Reading 01: Hacking Culture" /><published>2021-02-04T05:32:20-05:00</published><updated>2021-02-04T05:32:20-05:00</updated><id>https://sambattalio.github.io/reading-01</id><content type="html" xml:base="https://sambattalio.github.io/reading-01/">&lt;p&gt;Levy largely described hackers as essentially “no-lifers” who spend their whole life and spirt dedicated to computers and nothing else, not even the simple shower. Through this lifestyle, these hackers lead groundbreaking innovations and create really neat stuff. Generally, these hackers focus more on stretching the limitations of the systems to make art and beauty, and less of the implications. This thematic “shunning” of all things not computation is characteristic of the Levy hacker. We discussed in class a large number of these true hackers don’t even do their computing coursework, as even that isn’t important when faced with the prospect of time on a machine.&lt;/p&gt;

&lt;p&gt;To dive into this more, I personally found the Spacewar section to be fairly characteristic of the hacker with long programming sessions, collaboration, and free information. It started as a passion project where one was goaded by his friends to finally make the game and ended with countless hours and modifications from everyone around. This software was freely available for use for any reason at all. This was a big step forward technologically and seemingly way ahead of its time. I found it very interesting the hacker atmosphere and culture throughout this process, where all the hackers were excited and embraced contributions (as long as they aren’t crazy and unannounced). It was embraced by the community so much that it would ship on the PDP-1 for diagnostics. It seems from this that a “True Hacker” carries a passion for collaboration as well as the grind of programming. I found it funny that there was a falloff in some hackers’ enjoyment of the game when they stopped heavily programming it. This falloff represents, to me, that for most “True Hackers” the enjoyment heavily comes from the grind and the road along the way, and not the end program.&lt;/p&gt;

&lt;p&gt;Another example I find of a “true hacker” is Terry Davis, creator of TempleOS. Though facing mental illness, the hacker mentality was strong with Davis. He basically worked nonstop on his operating system for a decade of his life. I won’t get too much into this, but I find Terry to be a great example of a more modern hacker.&lt;/p&gt;

&lt;p&gt;I originally viewed a hacker or a “true hacker” as first the movie answer of a Mr. Robot type person, and second as someone who works on side projects or modifies an existing program to benefit others. The latter part of my definition is similar to Levy’s definition, however does not go as hardcore. I personally think a hacker need not spend their whole lives on the grind or show immense skill on the computer at the first touch of the keys. I found it interesting in the class discussion about the seeming dissonance between “our” idea of a hacker and Levy’s. It could be the changing environment and landscape, or perhaps ourselves, however there is a clear breakup in the idea of both inclusion and intensity. I feel that though the hacker mentality only holds people to their hacking ability, this largely can be exclusionary and toxic in some groups. If one has never touched a computer before coming to MIT, they would likely be shunned by the “true hackers”, though there is no tell of the ceiling of this person’s skill. Next, the idea of intensity, though previously touched on, is something I find so interesting that Levy fixates on. How can a hacker be so limited to those who only see computers? Having experiences outside of the technological world can ignite innovation in a way that reading manuals and studying the hardware cannot.&lt;/p&gt;

&lt;p&gt;Thus, I find personally that a “true hacker” is not more than one who is curious and continuously seeks to grow to make cool things with computers. I don’t know why it has to be anything more than that. The idea of a “true hacker” to me is something I originally would have adored coming into college. The MVP or heroes of computing were people I looked up to when teaching myself to code when I was younger. Now, having spent years programming and working (summers) in industry, I find a lot of their lives to not resonate with me anymore. Though I find it impressive to be that dedicated, I find it not to be sustainable in practice and unhealthy for people to strive for. A lot of these hackers were toxic and not everyone can skirt burnout like these folks seemingly did.&lt;/p&gt;

&lt;p&gt;Overall, I definitely do not find myself aspiring to be a “true hacker” anymore. I honestly don’t know when this shift in mentality came, but it has grown stronger and stronger as time passes. I don’t want to be an RMS, though their impact on computing was so strong. I think people like them are unsustainable and are talents that come few a generation. I know I will be happy making cool stuff while not necessarily knowing everything about the computer/program I use or making something limit stretching. A good long coding session is honestly a blast in the right setting, but the sacrifices around being Levy’s true hacker are so steep I don’t think I could do it. However, I would like to consider myself still a hacker. I create what I think are cool programs to fill my needs, and I love to work on projects alone or with others. I aspire to continue this work of side projects and keeping the passion of computers in my life as I go into industry.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Sam&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Sam Battalio</name></author><summary type="html">Levy largely described hackers as essentially “no-lifers” who spend their whole life and spirt dedicated to computers and nothing else, not even the simple shower. Through this lifestyle, these hackers lead groundbreaking innovations and create really neat stuff. Generally, these hackers focus more on stretching the limitations of the systems to make art and beauty, and less of the implications. This thematic “shunning” of all things not computation is characteristic of the Levy hacker. We discussed in class a large number of these true hackers don’t even do their computing coursework, as even that isn’t important when faced with the prospect of time on a machine.</summary></entry></feed>